@model Telephones.Models.Information
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Create";
}
@{
    string SignIn = "Admin@yahoo.com";
    string Email = @User.Identity?.Name;
}
@if (SignInManager.IsSignedIn(User) == false) /* Visitor */
{
    <h1 style="position: absolute;top: 50%;left: 50%;-ms-transform: translateX(-50%) translateY(-50%);-webkit-transform: translate(-50%,-50%);transform: translate(-50%,-50%);color:red">
        !!!Access for Visitors is prohibited!!!
    </h1>
}
else if (@SignIn != @User.Identity?.Name && SignInManager.IsSignedIn(User)) /* User, cannot change email */
{
<h1>Create</h1>

<h4>Information</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" value="@User.Identity?.Name" readonly="readonly" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            <div class="form-group" style="padding-bottom: 25px;padding-top: 25px">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">
        <div class="form-group">
            <input value="Back to List" class="btn btn-primary" />
        </div>
    </a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
}
else{ /* Admin */
    <h1>Create (Admin Control)</h1>

    <h4>Information</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="control-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group" style="padding-bottom: 25px;padding-top: 25px">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">
            <div class="form-group">
                <input value="Back to List" class="btn btn-primary" />
            </div>
        </a>
    </div>


    @section Scripts {
    @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
}